@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>
<div>
    <ul class="navbar-nav flex-grow-1">
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="GetAddress">GetAddress</a>
        </li>

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="GetValuesInApi">GetValuesInApi</a>
        </li>

        @if (User.IsInRole("PayingUser"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="OnlyForPayingUser">
                    GetPayingUser (Only visible for PayingUser role)
                </a>
            </li>
        }

        @if ((await AuthorizationService.AuthorizeAsync(User, "CanGetCountries")).Succeeded)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="GetCountries">
                    GetCountries (Only visible if policy is allowed)
                </a>
            </li>
        }
    </ul>
</div>
